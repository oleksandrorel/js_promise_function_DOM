{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","e","type","nodeName","id","printMessage","message","notificationMessage","document","createElement","textContent","classList","add","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GAEjB,OAAA,IAAIC,QAAQ,SAACC,GAClBH,EAAQI,iBAAiBH,EAAW,SAACI,GAC/BJ,IAAcI,EAAEC,MAIpBH,EAAkBF,UAAAA,OAAAA,EAA6BD,qBAAAA,OAAAA,EAAQO,SACjDP,iBAAAA,OAAAA,EAAQQ,GADd,UAMN,IAAMC,EAAe,SAACC,GAEdC,IAAAA,EAAsBC,SAASC,cAArC,OAEAF,EAAoBG,YAAcJ,EAClCC,EAAoBI,UAAUC,IAA9B,WACAJ,SAASK,KAAKC,OAAOP,IAGvBQ,OAAOC,QAAU,CACfrB,QAAAA,EACAU,aAAAA","file":"main.b4bfc12c.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n// write your code here\n  return new Promise((resolve) => {\n    element.addEventListener(eventName, (e) => {\n      if (eventName !== e.type) {\n        return;\n      }\n\n      resolve(`It was ${eventName} on the element: ${element.nodeName},\n      id: ${element.id}.`);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n// write your code here\n  const notificationMessage = document.createElement(`div`);\n\n  notificationMessage.textContent = message;\n  notificationMessage.classList.add(`message`);\n  document.body.append(notificationMessage);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}